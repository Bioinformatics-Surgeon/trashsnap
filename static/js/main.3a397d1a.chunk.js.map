{"version":3,"sources":["components/Maps/MainMap.js","components/App.js","index.js"],"names":["MainMap","state","center","lat","lng","showingInfoWindow","activeMarker","selectedPlace","zoom","points","pointArr","showInfoWindow","_this2","this","react_default","a","createElement","style","height","width","position","id","dist_default","google","props","defaultCenter","parseFloat","latitude","longitude","bounds","onClick","onMapClick","map","yuck","dist","onMarkerClick","title","name","url","address","Component","GoogleApiWrapper","apiKey","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","myUploadWidget","window","cloudinary","openUploadWidget","cloudName","uploadPreset","defaultSource","error","result","event","console","log","close","quiet","navigator","geolocation","getCurrentPosition","className","Maps_MainMap","href","handleSubmit","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"wPAIMA,6MACJC,MAAQ,CACNC,OAAQ,CACNC,IAAK,UACLC,KAAM,UACNC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,IAEjBC,KAAM,GACNC,OAAQ,CACN,CAAEN,IAAK,MAAOC,KAAM,MACpB,CAAED,IAAK,MAAOC,KAAM,MACpB,CAAED,IAAK,MAAOC,KAAM,IACpB,CAAED,IAAK,MAAOC,KAAM,QAEtBM,SAAU,GACVC,gBAAgB,2EAmBT,IAAAC,EAAAC,KACP,OAEEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,SAAU,YACpDC,GAAG,YAEHP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEQ,OAAQV,KAAKW,MAAMD,OACnBE,cAAeZ,KAAKZ,MAAMC,OAC1BA,OAAQ,CACNC,IAAKuB,WAAWb,KAAKZ,MAAM0B,UAC3BvB,IAAKsB,WAAWb,KAAKZ,MAAM2B,YAE7BpB,KAAMK,KAAKW,MAAMhB,KACjBqB,OAAQhB,KAAKJ,OACbqB,QAASjB,KAAKkB,YAEblB,KAAKZ,MAAMS,SAASsB,IAAI,SAAAC,GAAI,OAC3BnB,EAAAC,EAAAC,cAACkB,EAAA,OAAD,CACEd,SAAU,CAAEjB,IAAK8B,EAAK9B,IAAKC,IAAK6B,EAAK7B,KACrC0B,QAASlB,EAAKuB,cACdC,MAAOH,EAAKI,KACZA,KAAMJ,EAAKI,KACXC,IAAKL,EAAKK,IACVC,QAASN,EAAKM,SANhB,iBAvDUC,aAwEPC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZzC,GCEY2C,cA3Eb,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA8B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApC,KAAMW,KACDvB,MAAQ,GAFI2C,8EAMjB,IAAMM,EAAiBC,OAAOC,WAAWC,iBACvC,CACEC,UAAW,oBACXC,aAAc,WACdC,cAAe,UAEjB,SAACC,EAAOC,GACe,YAAjBA,EAAOC,QACTC,QAAQC,IAAIH,GAEZR,EAAeY,MAAM,CAAEC,OAAO,OAKlC,+CAKFC,UAAUC,YAAYC,mBACtB,SAAsB9C,GACpBwC,QAAQC,IAAIzC,sCAKd,OACEN,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,WACbrD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,aACbrD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,8CAAf,cAIArD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,OACbrD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,6CACbrD,EAAAC,EAAAC,cAACoD,EAAD,SAKNtD,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,oCACbrD,EAAAC,EAAAC,cAAA,MAAImD,UAAU,8BACZrD,EAAAC,EAAAC,cAAA,MAAImD,UAAU,wBACZrD,EAAAC,EAAAC,cAAA,KAAGmD,UAAU,eAAeE,KAAK,KAAjC,UAIFvD,EAAAC,EAAAC,cAAA,MAAImD,UAAU,YACZrD,EAAAC,EAAAC,cAAA,UACEK,GAAG,eACH8C,UAAU,uCACVrC,QAASjB,KAAKyD,cAHhB,gBAQFxD,EAAAC,EAAAC,cAAA,MAAImD,UAAU,wBACZrD,EAAAC,EAAAC,cAAA,KAAGmD,UAAU,eAAeE,KAAK,KAAjC,sBAjEI7B,aCAlB+B,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3a397d1a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Map from 'google-maps-react';\n\nclass MainMap extends Component {\n  state = {\n    center: {\n      lat: 39.958003,\n      lng: -75.196651,\n      showingInfoWindow: false, //Hides or the shows the infoWindow\n      activeMarker: {}, //Shows the active marker upon click\n      selectedPlace: {}\n    },\n    zoom: 12,\n    points: [\n      { lat: 39.91, lng: -75.2 },\n      { lat: 39.86, lng: -75.1 },\n      { lat: 39.77, lng: -75.0 },\n      { lat: 39.68, lng: -74.91 }\n    ],\n    pointArr: [],\n    showInfoWindow: true\n  };\n\n  // onMarkerClick = (props, marker, e) =>\n  //   this.setState({\n  //     selectedPlace: props,\n  //     activeMarker: marker,\n  //     showingInfoWindow: true\n  //   });\n\n  // onMapClick = props => {\n  //   if (this.state.showingInfoWindow) {\n  //     this.setState({\n  //       showingInfoWindow: false,\n  //       activeMarker: null\n  //     });\n  //   }\n  // };\n\n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      <div\n        style={{ height: '400px', width: '350px', position: 'relative' }}\n        id='mapEmbed'\n      >\n        <Map\n          google={this.props.google}\n          defaultCenter={this.state.center}\n          center={{\n            lat: parseFloat(this.state.latitude),\n            lng: parseFloat(this.state.longitude)\n          }}\n          zoom={this.props.zoom}\n          bounds={this.points}\n          onClick={this.onMapClick}\n        >\n          {this.state.pointArr.map(yuck => (\n            <Marker\n              position={{ lat: yuck.lat, lng: yuck.lng }}\n              onClick={this.onMarkerClick}\n              title={yuck.name}\n              name={yuck.name}\n              url={yuck.url}\n              address={yuck.address}\n            >\n              )}\n            </Marker>\n          ))}\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDSI6lWAGiM5M4WzNSJB55KLUYzjwqX05k'\n})(MainMap);\n","import React, { Component } from 'react';\nimport './App.css';\nimport MainMap from './Maps/MainMap';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit() {\n    const myUploadWidget = window.cloudinary.openUploadWidget(\n      {\n        cloudName: 'moodyappcloudname',\n        uploadPreset: 'lw2wvmbe',\n        defaultSource: 'camera'\n      },\n      (error, result) => {\n        if (result.event === 'success') {\n          console.log(result);\n          // close widget\n          myUploadWidget.close({ quiet: true });\n        } else {\n          // console.log(error);\n        }\n      },\n      false\n    );\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(showPosition);\n    function showPosition(position) {\n      console.log(position);\n    }\n  }\n\n  render() {\n    return (\n      <div className='content'>\n        <div className='container'>\n          <div className='jumbotron d-flex justify-content-center h1'>\n            Trash Snap\n          </div>\n\n          <div className='row'>\n            <div className='col d-flex justify-content-center content'>\n              <MainMap />\n            </div>\n          </div>\n        </div>\n\n        <div className='card card-footer p-3 my-2 footer'>\n          <ul className='nav justify-content-center'>\n            <li className='nav-item center-link'>\n              <a className='nav-link p-0' href='#'>\n                Snaps\n              </a>\n            </li>\n            <li className='nav-item'>\n              <button\n                id='uploadButton'\n                className='btn btn-primary rounded-pill p-3 m-3'\n                onClick={this.handleSubmit}\n              >\n                Take a Snap\n              </button>\n            </li>\n            <li className='nav-item center-link'>\n              <a className='nav-link p-0' href='#'>\n                Friends\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}